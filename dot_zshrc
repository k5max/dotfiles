# == 加载 zsh file ==
# prompt设置
[ -f ~/.config/zsh/prompts/lime.plugin.zsh ] && source ~/.config/zsh/prompts/lime.plugin.zsh
# Auto suggestion
[ -f ~/.config/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ] && source ~/.config/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
# Syntax highlighting
[ -f ~/.config/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ] && source ~/.config/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# == Basic ==
# 关闭beep声音
unsetopt beep
# 设置历史命令记录数
HISTSIZE=1000
# 设置记录历史文件大小
HISTFILESIZE=2000

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# export COLORTERM=truecolor
# export CLICOLOR=1
# export LSCOLORS=GxFxCxDxBxegedabagaced
export PATH="$HOME/.local/bin:$PATH"

# == alias ==
alias ll='ls -hl'
alias la='ls -al'
alias lg='lazygit'
alias proxy="source ~/proxy.sh"

# == vi-model ==
bindkey -v
KEYTIMEOUT=1
# Zsh shortcut 'Ctrl+A' and 'Ctrl+E' not working
# ref: https://stackoverflow.com/questions/23128353/zsh-shortcut-ctrl-a-not-working
bindkey "^A" vi-beginning-of-line
bindkey "^E" vi-end-of-line
# Zsh vi-model backspace doesn't delete non-inserted characters
# ref: https://vi.stackexchange.com/questions/31671/set-o-vi-in-zsh-backspace-doesnt-delete-non-inserted-characters
bindkey "^H" backward-delete-char
bindkey "^?" backward-delete-char

# == 配置 Zsh vi-mode 的光标形状 ==
# 参考: https://unix.stackexchange.com/questions/433273/changing-cursor-style-based-on-mode-in-both-zsh-and-vim
function zle-keymap-select {
	if [[ ${KEYMAP} == vicmd ]] || [[ $1 = 'block' ]]; then
		echo -ne '\e[1 q'
	elif [[ ${KEYMAP} == main ]] || [[ ${KEYMAP} == viins ]] || [[ ${KEYMAP} = '' ]] || [[ $1 = 'beam' ]]; then
		echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select

_fix_cursor() {
	echo -ne '\e[5 q'
}
precmd_functions+=(_fix_cursor)

### 命令设置 ###
# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# fzf
# Set up fzf key bindings and fuzzy completion (verison < 0.48.0)
[ -f ~/.config/zsh/fzf/completion.zsh ] && source ~/.config/zsh/fzf/completion.zsh
[ -f ~/.config/zsh/fzf/key-bindings.zsh ] && source ~/.config/zsh/fzf/key-bindings.zsh

# eval "$(fzf --zsh)" # Set up fzf key bindings and fuzzy completion (require verison >= 0.48.0)
export FZF_DEFAULT_COMMAND='fd --type file --strip-cwd-prefix --hidden --follow --exclude .git' # require install fd-find
# export FZF_DEFAULT_OPTS='--bind=ctrl-t:top --preview "[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (ccat --color=always {} || cat {}) 2> /dev/null | head -500"'
export FZF_DEFAULT_OPTS='--bind=ctrl-t:top --layout=reverse --preview "[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (bat --theme=gruvbox-dark --color=always {} || cat {}) 2> /dev/null | head -500"' # require install bat
export FZF_COMPLETION_TRIGGER='**' # trigger sequence default **
export FZF_COMPLETION_OPTS='--border --info=inline' # options to fzf command

